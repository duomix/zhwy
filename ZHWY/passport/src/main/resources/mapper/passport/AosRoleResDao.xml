<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.aisino.passport.sys.dao.IAosRoleResDao">
	
	
	<!-- 查询当前人员职务角色资源并选中角色资源 -->
    <select id="queryRoleResTree" parameterType="XHashMap" resultType="XHashMap" >
		select 
			    (select count(1) from (select 
									r.pid
								from
									aos_user u
										inner join
									aos_user_duty u_duty ON u.userid = u_duty.userid
										inner join
									aos_duty_role d_role ON u_duty.dutyid = d_role.dutyid
										inner join
									aos_role_res r_res ON r_res.roleid = d_role.roleid
										inner join
									aos_resource r ON r.resid = r_res.resid
								where
									u.available = 1 and u_duty.available = 1
										and d_role.available = 1
										and r_res.available = 1
										and r.available = 1
								and u.userid = #{userid}
								and u_duty.dutyid = #{dutyid}) A where r.resid = A.pid ) as leaf_node,
								ch.resid as checked,
								r.resid as id, r.pid, r.resname as name
			from
			    aos_user u
			        inner join
			    aos_user_duty u_duty ON u.userid = u_duty.userid
			        inner join
			    aos_duty_role d_role ON u_duty.dutyid = d_role.dutyid
			        inner join
			    aos_role_res r_res ON r_res.roleid = d_role.roleid
			        inner join
			    aos_resource r ON r.resid = r_res.resid
					left join 
				aos_role_res ch on r.resid = ch.resid and ch.roleid = #{roleid}
			where
			    u.available = 1 and u_duty.available = 1
			        and d_role.available = 1
			        and r_res.available = 1
			        and r.available = 1
			and u.userid = #{userid}
			and u_duty.dutyid = #{dutyid}
			and r.pid = #{pid}
	</select>
	
	<!-- 查询角色资源树 -->
    <select id="queryRoleRes" parameterType="map" resultType="XHashMap" >
    	SELECT
			s.resid id,
		  s.pid,
		  s.resname name,
		  EXISTS(SELECT * FROM aos_resource a where a.pid = s.resid)  isparent,
		  EXISTS(SELECT rs.resid FROM aos_role r, aos_role_res rs WHERE r.roleid = #{roleid} AND r.roleid = rs.roleid AND r.available = 1 AND rs.available = 1 and rs.resid = s.resid ) checked
		FROM
			aos_resource s 
		WHERE
			s.available = 1
    </select>
	
	<select id="findList" parameterType="AosRoleRes" resultType="AosRoleRes" >
		select 
				t.roleid, t.resid, t.createdate, t.createby, t.available, t.id
			from aos_role_res t 
			
			where 1 = 1  
			<if test="roleid != null and roleid !=''"> and 
				t.roleid = #{roleid}
			</if>
			<if test="resid != null and resid !=''"> and 
				t.resid = #{resid}
			</if>
			<if test="createdate != null and createdate !=''"> and 
				t.createdate = #{createdate}
			</if>
			<if test="createby != null and createby !=''"> and 
				t.createby = #{createby}
			</if>
			<if test="available != null and available !=''"> and 
				t.available = ${available}
			</if>
			<if test="id != null and id !=''"> and 
				t.id = #{id}
			</if>
			order by t.createdate desc
	</select>

	<select id="get" parameterType="AosRoleRes" resultType="AosRoleRes" >
		select 
				t.roleid, t.resid, t.createdate, t.createby, t.available, t.id
			from aos_role_res t 
			
			where 1 = 1  
			<if test="roleid != null and roleid !=''"> and 
				t.roleid = #{roleid}
			</if>
			<if test="resid != null and resid !=''"> and 
				t.resid = #{resid}
			</if>
			<if test="createdate != null and createdate !=''"> and 
				t.createdate = #{createdate}
			</if>
			<if test="createby != null and createby !=''"> and 
				t.createby = #{createby}
			</if>
			<if test="available != null and available !=''"> and 
				t.available = ${available}
			</if>
			<if test="id != null and id !=''"> and 
				t.id = #{id}
			</if>
	</select>

	<insert id="insert" parameterType="AosRoleRes">
		insert into aos_role_res
			(id 		<if test="roleid != null and roleid !=''"> , roleid</if>
		<if test="resid != null and resid !=''"> , resid</if>
		<if test="createdate != null and createdate !=''"> , createdate</if>
		<if test="createby != null and createby !=''"> , createby</if>
		<if test="available != null and available !=''"> , available</if>

		)
		values 			(#{id} 		<if test="roleid != null and roleid !=''"> , #{roleid}</if>
		<if test="resid != null and resid !=''"> , #{resid}</if>
		<if test="createdate != null and createdate !=''"> , #{createdate}</if>
		<if test="createby != null and createby !=''"> , #{createby}</if>
		<if test="available != null and available !=''"> , ${available}</if>

		)

	</insert>

	<update id="update" parameterType="AosRoleRes">
		update aos_role_res 
			set id   = #{id}
				<if test="roleid != null and roleid !=''"> , roleid = #{roleid}</if>
				<if test="resid != null and resid !=''"> , resid = #{resid}</if>
				<if test="createdate != null and createdate !=''"> , createdate = #{createdate}</if>
				<if test="createby != null and createby !=''"> , createby = #{createby}</if>
				<if test="available != null and available !=''"> , available = ${available}</if>

		where id = #{id}
	</update>

	<delete id="delete" parameterType="AosRoleRes">
		delete from aos_role_res  where roleid = #{roleid}
	</delete>

</mapper>
